<div x-data="{ 
        tab : 'Create Transaction', 
        balance: 0, 
    }"
    x-init=" fetch('/balance').then(data => data.json()).then(json => balance = json.balance) "
    >
    <header>
        <h1><span class="company" >Muneshwers</span> Petty Cash</h1>
        <div class="navbar">
            <nav :class="(tab == 'Create Transaction' ) ? 'current' : '' "  x-on:click="tab = 'Create Transaction' " >Create Transaction</nav>
            <nav :class="(tab == 'Reimburse' ) ? 'current' : '' "  x-on:click="tab = 'Reimburse' " >Reimburse</nav>
        </div>
    </header>
    <main>
        <h2 x-text="tab"></h2>
        <div x-show="tab == 'Create Transaction' " >
            <div x-data="{
                inputs : {
                    amount :  {value: '', valid: false},
                    recipient : {value: '', valid: false},
                    description : {value: '', valid: false},
                    date : {value: (new Date()).toISOString().split('T')[0], valid: true},
                },
                validate() {
                    console.log(this.inputs)
                    let keys = Object.keys(this.inputs)
                    for (let key of keys) {
                        if (!this.inputs[key].valid) {
                            return false
                        }
                    }
                    return true
                },
                formatDollar(number) {
                    return new Intl.NumberFormat('en-US', {
                        style: 'currency',
                        currency : 'USD',
                        minimumFractionDigits: 0,
                        maximumFractionDigits: 0,
                    }).format(number)
                }
            }
            " >
                <div class="amount-box">
                    <div class="amount"><div>Current Balance </div> <span style="color: green;"  x-text="formatDollar(balance)" ></span></div>
                    <div class="amount"><div>Amount </div> <span style="color: red;" x-text="formatDollar(Math.abs(inputs.amount.value) || 0)"></span></div>
                    <div class="amount"><div>Remainder </div> <span  x-text="formatDollar(balance - inputs.amount.value)" ></span></div>
                </div>
                <form hx-post="/balance" hx-target="body">
                    <div class="transaction-form">
                        <div 
                            @validation="
                                inputs[$event.detail.field].value = $event.detail.input; 
                                inputs[$event.detail.field].valid = $event.detail.valid;"
                            class="item" 
                            x-data="{
                                input : '',
                                errorMessage : '',
                                initialized : false,
                                validate() {
                                    this.initialized = true
                                    if (!this.input) {
                                        this.errorMessage = 'Recipient required'
                                        return false
                                    }
                                    this.errorMessage = ''
                                    return true
                                }
                        }">
                            <span class="errorMessage"  x-text="errorMessage"></span>
                            <input
                                x-on:input="let valid = validate(); $dispatch('validation', {valid, field : 'recipient', input})"
                                x-model="input"
                                x-bind:class="{'error' : errorMessage}"

                                placeholder="Recipient..."
                                type="text"
                                name="recipient"
                                id="recipient"
                            >
                        </div>
                        <div @validation="
                            inputs[$event.detail.field].value = $event.detail.input; 
                            inputs[$event.detail.field].valid = $event.detail.valid;
                            " 
                            class="item" x-data="{
                            input : '',
                            errorMessage : '',
                            initialized : false,
                            validate() {
                                this.initialized = true
                                if (!this.input) {
                                    this.errorMessage = 'Description required'
                                    return false
                                }
                                this.errorMessage = ''
                                return true
                            }
                        }">
                            <span class="errorMessage" x-text="errorMessage"></span>
                            <input
                                x-on:input="let valid = validate(); $dispatch('validation', {valid, field : 'description', input})"
                                x-model="input"
                                x-bind:class="{'error' : errorMessage}"
                                placeholder="Description..."
                                type="text"
                                name="description"
                                id="description"
                            >
                        </div>
                        <div
                            @validation="
                            inputs[$event.detail.field].value = $event.detail.input; 
                            inputs[$event.detail.field].valid = $event.detail.valid;
                            "
                            class="item" 
                            x-data="{
                                input : '',
                                errorMessage : '',
                                initialized : false,
                                validate() {
                                    this.initialized = true
                                    if (!this.input) {
                                        this.errorMessage = 'Amount required'
                                        return false
                                    }
                                    if (!Number(this.input)) {
                                        this.errorMessage = 'Number required'
                                        return false
                                    }
                                    if (this.input < 0) {
                                        this.errorMessage = 'Posivite values'
                                        return false
                                    }
                                    if (this.balance - this.input < 0) {
                                        this.errorMessage = 'Insufficient funds'
                                        return false
                                    }
                                    this.errorMessage = ''
                                    return true
                                }
                        }">
                            <span class="errorMessage" x-text="errorMessage"></span>
                            <input
                                x-on:input="let valid = validate(); $dispatch('validation', {valid, field : 'amount', input})"
                                x-model="input"
                                x-bind:class="{'error' : errorMessage}"
                                type="number"
                                placeholder="Amount..."
                                name="amount"
                                id="amount"
                            >
                        </div>
                        <div class="item" x-data="{
                            input : (new Date()).toISOString().split('T')[0],
                            errorMessage : '',
                            initialized : false,
                            validate() {
                                this.initialized = true
                                if (!this.input) {
                                    this.errorMessage = 'date required'
                                    return false
                                }
                                this.errorMessage = ''
                                return true
                            }
                        }">
                            <span class="errorMessage" x-text="errorMessage"></span>
                            <input
                                x-on:input="let valid = validate(); $dispatch('validation', {valid, field : 'date', input})"
                                x-model="input"
                                x-bind:class="{'error' : errorMessage}"
                                type="date"
                                name="date"
                                id="date"
                            >
                        </div>
                    </div>
                    <button class="submit-button" type="submit" :disabled="!validate()" >Submit</button>
                </form>
            </div>
        </div>

    </main>
</div>
